name: Local Project Backup (self-hosted)

on:
  schedule:
    - cron: '0 20 * * *'        # daily @ 20:00 UTC (23:00 UTC+3)
  workflow_dispatch:

permissions:
  contents: write

env:
  PROJECT_DIR: 'D:\Uday_Documents\00_TechtangoRJS'
  BRANCH: 'backup'
  TMP_REPO: ${{ runner.temp }}\backuprepo
  TMP_STAGE: ${{ runner.temp }}\stage

jobs:
  backup:
    runs-on: [self-hosted, Windows, X64, Techtango-runner]
    defaults:
      run:
        shell: powershell

    steps:
      - name: Prepare temp repo (local backup branch)
        run: |
          $ErrorActionPreference = 'Stop'
          if (Test-Path $env:TMP_REPO) { Remove-Item $env:TMP_REPO -Recurse -Force }
          New-Item -ItemType Directory -Path $env:TMP_REPO | Out-Null
          Set-Location $env:TMP_REPO
          git init
          git remote add origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git checkout -B $env:BRANCH

      - name: Zip local project (exclude heavy/sensitive)
        run: |
          $ErrorActionPreference = 'Stop'
          $timestamp = (Get-Date).ToUniversalTime().ToString("yyyy-MM-dd-HHmm'UTC'")
          $file = "techtango-backup-$timestamp.zip"
          $dest = Join-Path $env:RUNNER_TEMP $file

          if (Test-Path $env:TMP_STAGE) { Remove-Item $env:TMP_STAGE -Recurse -Force }
          New-Item -ItemType Directory -Path $env:TMP_STAGE | Out-Null

          robocopy "$env:PROJECT_DIR" "$env:TMP_STAGE" /MIR /R:1 /W:1 `
            /XD node_modules .git client\build `
            /XF *.env *.log | Out-Null
          $rc = $LASTEXITCODE
          if ($rc -ge 8) { throw "Robocopy failed with exit code $rc" }

          if (Test-Path $dest) { Remove-Item $dest -Force }
          Compress-Archive -Path "$env:TMP_STAGE\*" -DestinationPath $dest -CompressionLevel Optimal
          Copy-Item $dest (Join-Path $env:TMP_REPO $file)

      - name: Commit & push
        run: |
          $ErrorActionPreference = 'Stop'
          Set-Location $env:TMP_REPO
          git add -A

          $changes = git diff --cached --name-only
          if ($changes) {
            $msg = "ðŸ“¦ Backup: " + (Get-Date).ToUniversalTime().ToString("yyyy-MM-dd-HHmmUTC")
            git commit -m $msg
            git push origin $env:BRANCH
          } else {
            Write-Host "Nothing to commit"
          }

      - name: Prune ZIPs older than 30 days
        run: |
          $ErrorActionPreference = 'Stop'
          Set-Location $env:TMP_REPO
          $old = Get-ChildItem -Filter "techtango-backup-*.zip" |
                 Where-Object { $_.LastWriteTime -lt (Get-Date).AddDays(-30) }
          if ($old) {
            $old | Remove-Item -Force -ErrorAction SilentlyContinue
            git add -A
            $msg = "ðŸ§¹ Cleanup old zips: " + (Get-Date).ToUniversalTime().ToString("yyyy-MM-dd-HHmmUTC")
            git commit -m $msg
            git push origin $env:BRANCH
          } else {
            Write-Host "No old zips to delete"
          }
